Libtime is a package of subroutines to manipulate time values.
They are notable for handling leap seconds correctly by avoiding
the use of POSIX time_t for telling time.

Notes to users:

You will need python version 3 and its jdcal module.  Install the jdcal
module with pip.  First install pip.  The package name on both Ubuntu
and Fedora is python3-pip.

Then use pip to install jdcal:

    sudo pip3 install jdcal
    
Now you can install the libtime library the usual way:
    ./configure
    make
    sudo make install

In your source code, define the entry points with:

    #include <time_subroutines.h>
    
To compile and link your program prog.c, which uses the library, do this:

    gcc -L/usr/local/lib/ -Wl,-rpath=/usr/local/lib prog.c -ltime -o prog
    
The documentation for the time subroutines is in avoid_time_t.pdf, which you
can create by adding --enable-pdf to the ./configure line beforen running make.
You will need LaTeX and several of its packages to compile it.  Sudo make
install will then install the PDF file in /usr/local/share/doc/libtime.

If it is not convenient to compile the documentation, it is also available
at this URL:

<https://commons.wikimedia.org/wiki/File:Avoid_Using_POSIX_time_t_for_Telling_Time.pdf>

In addition, there is concise documentation in man libtime.


Notes to developers:

To create the documentation file, invoke ./configure with --enable-pdf.
You will need LaTeX to build it.  Building the distribution kit builds
the PDF automatically.

The version number is the distribution date, since the unpredictability
of leap seconds means the program will never be complete.  When updating
the version number in configure.ac, don't forget to update the sharable
image version triplet, which is in Makefile.am, NEWS and avoid_time_t.tex.
The date also appears in avoid_time_t.tex, in three places: in the
PDF metadata, on the title page, and in the revision history.

There are several test program in the distribution kit, which are built
automatically.  I use test_ep to be sure all of the entry points are
working.  To verify that the distribution kit is valid, I use
make distcheck and I also extract all of the embedded files from the PDF
into a clean directory and make sure the result builds.
